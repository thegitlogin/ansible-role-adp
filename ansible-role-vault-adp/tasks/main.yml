---
- name: Include vars of into the 'extra' variable.
  include_vars:
    file: /tmp/ansible/roles/ansible-role-vault-install/defaults/main.yml
    name: extra
    
- name: Save the keys to s3
  command: "aws s3 cp s3://{{ extra.s3_bucket }}/{{ extra.s3_keys_folder }}/{{ vault_keysfile }} ~/{{ vault_keysfile }}"
  become: no

- name: Get root token
  become: true
  become_user: ubuntu
  slurp:
    src: "~/{{ vault_keysfile }}"
  register: token_file
  no_log: true

- name: Delete file
  file:
    state: absent
    path: "~/{{ vault_keysfile }}"
  become: no
  no_log: no

- name: get json data
  set_fact:
    json_data: "{{ token_file['content'] | b64decode }}"

- name: save root token variable
  set_fact:
    root_token: "{{ json_data.root_token }}"

- name: Getting custom CN
  shell: "openssl x509 -noout -subject -in {{ extra.vault_tls_path }}/{{ extra.cert_name }}.pem | grep -oP '(?<=CN = ).*'"
  register: custom_cn

- name: Vault heath check
  uri:
    url: "https://{{ custom_cn.stdout }}:{{ vault_port }}/v1/sys/health"
    validate_certs: no
    method: GET
    status_code: 473
  retries: 10
  delay: 5

- name: get status of transform secrets engine
  ansible.builtin.uri:
    url: "https://{{ custom_cn.stdout }}:{{ vault_port }}/v1/sys/mounts"
    method: GET
    headers:
      X-Vault-Token: "{{ root_token }}"
      X-Vault-Namespace: "{{ extra.namespace }}"
  failed_when:
    - no
  register: vault_status_transform
  environment:
    SSL_CERT_FILE: "{{ extra.vault_tls_path }}/{{ extra.cert_name }}.pem"


- name: enable transform secrets engine
  ansible.builtin.uri:
    url: "https://{{ custom_cn.stdout }}:{{ vault_port }}/v1/sys/mounts/transform"
    method: POST
    headers:
      X-Vault-Token: "{{ root_token }}"
      X-Vault-Namespace: "{{ extra.namespace }}"
    body:
      type: "{{ transform_path }}"
    body_format: json
    status_code:
      - 200
      - 204
  when:
    - "'{{ transform_path }}/' not in vault_status_transform.json.data"
  environment:
    SSL_CERT_FILE: "{{ extra.vault_tls_path }}/{{ extra.cert_name }}.pem"

- name: create transform secrets engine role
  ansible.builtin.uri:
    url: "https://{{ custom_cn.stdout }}:{{ vault_port }}/v1/transform/role/encryption"
    method: POST
    headers:
      X-Vault-Token: "{{ root_token }}"
      X-Vault-Namespace: "{{ extra.namespace }}"
    body: "{{ lookup('template','transform_roles.json.j2') }}"
    body_format: json
    status_code:
      - 200
      - 204
  environment:
    SSL_CERT_FILE: "{{ extra.vault_tls_path }}/{{ extra.cert_name }}.pem"

- name: create transformation creditcardnumber
  ansible.builtin.uri:
    url: "https://{{ custom_cn.stdout }}:{{ vault_port }}/v1/transform/transformation/fpe/creditcardnumber"
    method: POST
    headers:
      X-Vault-Token: "{{ root_token }}"
      X-Vault-Namespace: "{{ extra.namespace }}"
    body: "{{ lookup('file','transform_creditcard.json') }}"
    body_format: json
    status_code:
      - 200
      - 204
  environment:
    SSL_CERT_FILE: "{{ extra.vault_tls_path }}/{{ extra.cert_name }}.pem"

- name: create transformation socialsecuritynumber
  ansible.builtin.uri:
    url: "https://{{ custom_cn.stdout }}:{{ vault_port }}/v1/transform/transformation/fpe/socialsecuritynumber"
    method: POST
    headers:
      X-Vault-Token: "{{ root_token }}"
      X-Vault-Namespace: "{{ extra.namespace }}"
    body: "{{ lookup('file','transformation_socialsecurity.json') }}"
    body_format: json
    status_code:
      - 200
      - 204
  environment:
    SSL_CERT_FILE: "{{ extra.vault_tls_path }}/{{ extra.cert_name }}.pem"

- name: create transformation driverslicense
  ansible.builtin.uri:
    url: "https://{{ custom_cn.stdout }}:{{ vault_port }}/v1/transform/transformation/fpe/driverslicense"
    method: POST
    headers:
      X-Vault-Token: "{{ root_token }}"
      X-Vault-Namespace: "{{ extra.namespace }}"
    body: "{{ lookup('file','transformation_driverslicense.json') }}"
    body_format: json
    status_code:
      - 200
      - 204
  environment:
    SSL_CERT_FILE: "{{ extra.vault_tls_path }}/{{ extra.cert_name }}.pem"

- name: create driverslicense template
  ansible.builtin.uri:
    url: "https://{{ custom_cn.stdout }}:{{ vault_port }}/transform/template/driverslicense-template"
    method: POST
    headers:
      X-Vault-Token: "{{ root_token }}"
      X-Vault-Namespace: "{{ extra.namespace }}"
    body: "{{ lookup('file','transformation_driverslicense_template.json') }}"
    body_format: json
    status_code:
      - 200
      - 204
  environment:
    SSL_CERT_FILE: "{{ extra.vault_tls_path }}/{{ extra.cert_name }}.pem"